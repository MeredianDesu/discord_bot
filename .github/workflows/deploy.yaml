name: Build and Deploy JAR

# Trigger process to push into main branch
on:
  push:
    branches:
      - main  # Project main branch

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Insert bot token
        run: sed -i 's|<bot_token>|${{ secrets.BOT_TOKEN }}|' src/main/resources/application.properties

      # Build Maven project
      - name: Build with Maven
        run: mvn clean package -Dmaven.test.skip=true

      # Setup SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_ed25519

      # Add server to known_hosts
      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts  # Убедитесь, что файл имеет правильные разрешения

      # Add SSH key for SCP
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # Send JAR into server via SCP
      - name: Copy JAR to server via SCP
        run: scp target/yamaneko_bot-0.0.1.jar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/var/yamaneko
        env:
          # Using secrets
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}